apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: innerservices.virtletlb.virtlet.cloud
spec:
  group: virtletlb.virtlet.cloud
  names:
    kind: InnerService
    plural: innerservices
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            nodeNames:
              items:
                type: string
              type: array
            ports:
              items:
                properties:
                  name:
                    description: The name of this port within the service. This must
                      be a DNS_LABEL. All ports within a ServiceSpec must have unique
                      names. This maps to the 'Name' field in EndpointPort objects.
                      Optional if only one ServicePort is defined on this service.
                    type: string
                  nodePort:
                    description: The port on the inner cluster node used by the service.
                    format: int32
                    type: integer
                  port:
                    description: The port that will be exposed by this service. This
                      corresponds to the NodePort value in the inner cluster's service
                      and Port value in the outer service
                    format: int32
                    type: integer
                  protocol:
                    description: The IP protocol for this port. Supports "TCP", "UDP",
                      and "SCTP". Default is TCP.
                    type: string
                required:
                - port
                type: object
              type: array
          type: object
        status:
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
